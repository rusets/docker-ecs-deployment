name: CI — Build & Push to ECR

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: ecs-demo-app
  IMAGE_TAG: latest
  IMAGE_SHA_TAG: ${{ github.sha }}

permissions:
  id-token: write
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::097635932419:role/github-actions-ecs-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR repo exists
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" --region "$AWS_REGION" >/dev/null 2>&1 \
          || aws ecr create-repository --repository-name "$ECR_REPOSITORY" --region "$AWS_REGION" >/dev/null

      - name: Compute ECR URL
        id: ecr
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "ECR_URL=${ACCOUNT_ID}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}" >> $GITHUB_OUTPUT
          echo "TAG_LATEST=${{ env.IMAGE_TAG }}" >> $GITHUB_OUTPUT
          echo "TAG_SHA=${{ env.IMAGE_SHA_TAG }}" >> $GITHUB_OUTPUT

      # Multi-arch сборка требует QEMU + buildx
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # Одна сборка → два тега (latest + sha). В PR — без push.
      - name: Build (PR) — multi-arch, no push
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -f app/Dockerfile \
            -t "${{ steps.ecr.outputs.ECR_URL }}:${{ steps.ecr.outputs.TAG_LATEST }}" \
            -t "${{ steps.ecr.outputs.ECR_URL }}:${{ steps.ecr.outputs.TAG_SHA }}" \
            app

      - name: Build & Push (main/dispatch) — multi-arch
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -f app/Dockerfile \
            -t "${{ steps.ecr.outputs.ECR_URL }}:${{ steps.ecr.outputs.TAG_LATEST }}" \
            -t "${{ steps.ecr.outputs.ECR_URL }}:${{ steps.ecr.outputs.TAG_SHA }}" \
            app --push

      - name: Output image refs
        run: |
          echo "Pushed (or built):"
          echo "  ${{ steps.ecr.outputs.ECR_URL }}:${{ steps.ecr.outputs.TAG_LATEST }}"
          echo "  ${{ steps.ecr.outputs.ECR_URL }}:${{ steps.ecr.outputs.TAG_SHA }}"