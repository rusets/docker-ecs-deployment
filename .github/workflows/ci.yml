name: CI — Build & Push to ECR

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: ecs-demo-app
  IMAGE_TAG: latest
  IMAGE_SHA_TAG: ${{ github.sha }}

permissions:
  id-token: write
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::097635932419:role/github-actions-ecs-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR repo exists
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" >/dev/null 2>&1 \
          || aws ecr create-repository --repository-name "$ECR_REPOSITORY" >/dev/null

      - name: Compute ECR URL
        id: ecr
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "ECR_URL=${ACCOUNT_ID}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}" >> $GITHUB_OUTPUT

      - name: Build (PR → no push) [ARM64]
        run: |
          docker buildx create --use >/dev/null 2>&1 || true
          CMD="docker buildx build --platform linux/arm64/v8 -f app/Dockerfile -t '${{ steps.ecr.outputs.ECR_URL }}:${{ env.IMAGE_TAG }}' app"
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            eval "$CMD"
          else
            eval "$CMD --push"
          fi

      - name: Also push SHA tag
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker buildx create --use >/dev/null 2>&1 || true
          docker buildx build --platform linux/arm64/v8 \
            -f app/Dockerfile -t "${{ steps.ecr.outputs.ECR_URL }}:${{ env.IMAGE_SHA_TAG }}" app --push