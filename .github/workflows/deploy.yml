name: Build & Deploy to ECS (OIDC Least-Privilege)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 097635932419.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: myapp
  CLUSTER_NAME: docker-ecs-deployment-cluster
  SERVICE_NAME: docker-ecs-deployment-svc
  IMAGE_TAG: latest
  IMAGE_SHA_TAG: ${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write    # REQUIRED for OIDC
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Get short-lived AWS creds via OIDC (assumes the role we created)
      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
        role-to-assume: arn:aws:iam::097635932419:role/github-actions-ecs-role
        aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image (latest + sha)
        run: |
          docker buildx create --use --name mybuilder || true
          docker buildx build --platform linux/amd64 \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_SHA_TAG \
            --push .

      - name: Force ECS service to deploy new image
        run: |
          aws ecs update-service \
            --cluster $CLUSTER_NAME \
            --service $SERVICE_NAME \
            --force-new-deployment \
            --region $AWS_REGION